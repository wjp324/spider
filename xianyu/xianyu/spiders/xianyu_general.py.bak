# -*- coding: utf-8 -*-
import scrapy
import re
from xianyu.macbookpro import MacBookPro 

class XianyuGeneralSpider(scrapy.Spider):
	name = "xianyu_general"
	allowed_domains = ["taobao.com"]
	start_urls = ['https://s.2.taobao.com/list/list.htm?q=macbook+pro&search_type=item&app=shopsearch']
	items = []

	def start_requests(self):
		print self.start_urls[0]
    		return scrapy.Request('https://s.2.taobao.com/list/list.htm?q=macbook+pro&search_type=item&app=shopsearch', callback=self.total_page)

	def total_page(self, response):
		print 'total'
		page = response.xpath('//span[@class="paginator-count"]/text()').extract()
		page_sum = page[0][1:len(page[0])-1]

		for i in range(1,int(page_sum)):
			self.start_urls.append('https://s.2.taobao.com/list/list.htm?q=macbook+pro&search_type=item&app=shopsearch&page=%s' % i)
		for url in self.start_urls:
			print url
			yield scrapy.Request(url, callback=self.parse)

	def parse(self, response):
		item = MacBookPro()
                print response
		price_list = sel.xpath('div[@class="item-info"]/div[@class="item-price price-block"]//em/text()').extract()
		price = price_list[0]
		item["price"] = price_list[0]
		return item
"""
		for sel in response.xpath('//div[@id="J_ItemListsContainer"]/ul/li'):
			item_url_list = sel.xpath('div[@class="item-info"]/h4/a/@href').extract()
			item_url = item_url_list[0]
			item = scrapy.Request(item_url, callback=self.parse_inner)
"""
'''
	def parse_inner(self, response):
		item = MacBookPro()
		print response
		item_id = item_url[item_url.index("id=")+3:]
		item["item_id"] = item_id

	    	title_list = sel.xpath('div[@class="item-info"]/h4/a/text()').extract()
		title = title_list[0]
		item["title"] = title_list[0]

		description_list = sel.xpath('div[@class="item-info"]/div[@class="item-description"]/text()').extract()
		description = description_list[0]
		detail = description_list[0]

		price_list = sel.xpath('div[@class="item-info"]/div[@class="item-price price-block"]//em/text()').extract()
		price = price_list[0]
		item["price"] = price_list[0]

		seller_location_list = sel.xpath('div[@class="seller-info-wrapper"]//div[@class="seller-location"]/text()').extract()
		seller_location = seller_location_list[0]
		item["seller_location"] = seller_location_list[0]
			
		return item 
'''
